# define
snippet def "#define" b
	#define $1
# ifndef
snippet #ifndef "#ifndef ... #define ... #endif" b
	#ifndef ${1/([A-Za-z0-9_]+).*/$1/}
	#define ${1:SYMBOL} ${2:value}
	#endif /* ifndef $1 */
#
snippet #if "#if ... #endif" b
	#if ${1:0}
		${2:// TODO(Aurel): autogenerated stub}
	#endif
#
snippet incl "include a library" b
	#include <${1:stdio}.h>
#
snippet inch "include a local header" b
	#include "${1:header}.h"
#
snippet if "basic if"
	if (${1:0}) {
		${2:${VISUAL}}
	}
#
snippet ife "if ... else ..."
	if (${1:0}) {
		${2:${VISUAL}}
	} else {
		${3:// TODO(Aurel): autogenerated stub}
	}
#
snippet eif "else ... if ..."
	else if (${1:0}) {
		${2:${VISUAL}}
	}
#
snippet else "else ..."
	else {
		${1:${VISUAL}}
	}
#
snippet while "while" b
	while (${1:0}) {
		${2:${VISUAL}}
	}
#
snippet dowhile "do .. while" b
	do {
		${2:${VISUAL}}
	} while (${1:0});
#
snippet for "for" b
	for (${1:int} ${2:i} = ${3:0}; $2 ${4:<} ${5:10}; ${6:++$2}) {
		${7:${VISUAL}}
	}
#
snippet switch "switch" b
	switch ($1) {
	case $2: ${3:${VISUAL}}
	}
#
snippet case "case" b
	case $1: ${2:${VISUAL}}
#
snippet todo "todo comment" b
	// TODO(Aurel): ${1:autogenerated stub}
snippet todo "todo"
	TODO(Aurel): ${1:autogenerated stub}
#
snippet main "main method" b
	int
	main(int argc, char* argv[])
	{
		${1:${VISUAL}}
	}
#
snippet func "function stub" b
	${1:void}
	${2:foo}(${3:char *argv})
	{
		${4:// TODO(Aurel): autogenerated stub}
	}
#
snippet struct "new struct" b
	typedef struct ${1:foo_t} {
		${2:variables}
	}$3;
#
snippet enum "new enum" b
	typedef enum {${1:items}}$2;
#
snippet print "simple print statement" b
	printf("$1"$2);
